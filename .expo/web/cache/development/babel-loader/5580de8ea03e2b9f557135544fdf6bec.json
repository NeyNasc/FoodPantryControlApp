{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\USTJ\\\\lala\\\\Previsao_OpenWeather\\\\App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      barCode = _useState2[0],\n      setBarCode = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      quantity = _useState4[0],\n      setQuantity = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      expirationDate = _useState8[0],\n      setExpirationDate = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      apiResponse = _useState10[0],\n      setApiResponse = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      notFound = _useState12[0],\n      setNotFound = _useState12[1];\n\n  var searchCity = function searchCity(cidade) {\n    setCidade(cidade);\n  };\n\n  var buscarCidades = function buscarCidades() {\n    var res = axios.post('/user', {\n      barCode: 'BarCode',\n      quantity: 'Quantity',\n      name: 'Name',\n      expirationDate: 'ExpirationDate'\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    setApiResponse([]);\n    fetch('https://api.openweathermap.org/data/2.5/weather?lang=pt&units=metric&q=' + cidade + '&appid=8a0c8437588d7b3c9d8188ce516e9abc').then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      if (response.cod && response.cod == 200) {\n        setNotFound(false);\n      } else {\n        setNotFound(true);\n      }\n\n      setApiResponse([response]);\n      Keyboard.dismiss();\n    });\n  };\n\n  return React.createElement(View, {\n    style: estilos.tela,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"./Imagens/fundo2.jpg\"),\n    style: estilos.fundo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: estilos.busca,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"C\\xF3digo de Barras\",\n    style: estilos.input,\n    value: cidade,\n    onChangeText: searchCity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Quatidade\",\n    style: estilos.input,\n    value: cidade,\n    onChangeText: searchCity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Digite nos da cidade\",\n    style: estilos.input,\n    value: cidade,\n    onChangeText: searchCity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), React.createElement(Button, {\n    title: \"Cadastrar\",\n    onPress: buscarCidades,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  })), notFound ? React.createElement(Text, {\n    style: estilos.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, React.createElement(Image, {\n    style: estilos.icones,\n    source: require(\"./Icones/atencao.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }), \"\\xA0\\xA0 NOME INCORRETO\") : React.createElement(FlatList, {\n    data: apiResponse,\n    renderItem: function renderItem(forecast) {\n      return React.createElement(View, {\n        style: estilos.cartao,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: estilos.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 37\n        }\n      }, React.createElement(View, {\n        style: estilos.itens,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 41\n        }\n      }, React.createElement(Text, {\n        style: estilos.nomeCidade,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 49\n        }\n      }, forecast.item.name), React.createElement(Text, {\n        style: estilos.resultado,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 53\n        }\n      }, React.createElement(Image, {\n        style: estilos.icones,\n        source: require(\"./Icones/temp.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 57\n        }\n      }), \"\\xA0\\xA0\\xA0\\xA0 Temperatura:\", forecast.item.main.feels_like + \" \\xB0\" + \"C\"), React.createElement(Text, {\n        style: estilos.resultado,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 53\n        }\n      }, React.createElement(Image, {\n        style: estilos.icones,\n        source: require(\"./Icones/up.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 57\n        }\n      }), \"\\xA0\\xA0\\xA0\\xA0 Nascer do sol:\", new Date(forecast.item.sys.sunrise * 1000).toLocaleTimeString()), React.createElement(Text, {\n        style: estilos.resultado,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 53\n        }\n      }, React.createElement(Image, {\n        style: estilos.icones,\n        source: require(\"./Icones/down.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 57\n        }\n      }), \"\\xA0\\xA0\\xA0\\xA0 P\\xF4r do sol:\", new Date(forecast.item.sys.sunset * 1000).toLocaleTimeString()))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  })));\n}\nvar estilos = StyleSheet.create({\n  tela: {\n    flexDirection: 'column',\n    flex: 2,\n    textAlign: \"center\"\n  },\n  busca: {\n    textAlign: \"center\",\n    marginBottom: 10\n  },\n  fundo: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  icones: {\n    width: 50,\n    height: 50\n  },\n  nomeCidade: {\n    color: 'black',\n    fontWeight: 'bold',\n    fontSize: 50,\n    padding: 10,\n    flexDirection: 'column',\n    textTransform: 'uppercase'\n  },\n  itens: {\n    flexDirection: 'column',\n    fontWeight: 'bold',\n    alignItems: 'left'\n  },\n  resultado: {\n    marginTop: 10,\n    marginHorizontal: 2,\n    flexDirection: 'column',\n    fontWeight: 'bold',\n    alignItems: 'left',\n    textAlign: 'left'\n  },\n  error: {\n    color: 'red',\n    textAlign: 'center',\n    marginBottom: 10,\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  cartao: {\n    marginBottom: 5,\n    alignItems: 'center',\n    backgroundColor: 'white',\n    padding: 30,\n    fontWeight: 'bold'\n  },\n  item: {\n    alignItems: 'center',\n    flexDirection: 'column',\n    fontWeight: 'bold'\n  },\n  input: {\n    color: 'black',\n    fontWeight: 'bold',\n    fontSize: 20,\n    padding: 10,\n    borderBottomColor: 'black',\n    marginbottom: 10,\n    textAlign: \"center\",\n    marginBottom: 10,\n    textTransform: 'uppercase'\n  },\n  botao: {\n    color: '#00BFFF',\n    borderRadius: 40,\n    textAlign: \"center\",\n    width: 40,\n    height: 30,\n    borderRadius: 40\n  }\n});","map":{"version":3,"sources":["C:/USTJ/lala/Previsao_OpenWeather/App.js"],"names":["React","useState","App","barCode","setBarCode","quantity","setQuantity","name","setName","expirationDate","setExpirationDate","apiResponse","setApiResponse","notFound","setNotFound","searchCity","cidade","setCidade","buscarCidades","res","axios","post","then","response","console","log","catch","error","fetch","json","cod","Keyboard","dismiss","estilos","tela","require","fundo","busca","input","icones","forecast","cartao","item","itens","nomeCidade","resultado","main","feels_like","Date","sys","sunrise","toLocaleTimeString","sunset","StyleSheet","create","flexDirection","flex","textAlign","marginBottom","resizeMode","justifyContent","width","height","color","fontWeight","fontSize","padding","textTransform","alignItems","marginTop","marginHorizontal","backgroundColor","borderBottomColor","marginbottom","botao","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {StyleSheet,TextInput,View,Button,FlatList,Keyboard,Image,Text,ImageBackground} from 'react-native';\n\nexport default function App() {\n    //const [cidade, setCidade] = useState('');\n    const [barCode, setBarCode] = useState('');\n    const [quantity, setQuantity] = useState('');\n    const [name, setName] = useState('');\n    const [expirationDate, setExpirationDate] = useState('');\n\n    const [apiResponse, setApiResponse] = useState([]);\n\n    const [notFound, setNotFound] = useState(false)\n\n    const searchCity = (cidade) => {\n        setCidade(cidade);\n    }\n\n    const buscarCidades = () => {\n        /**/ \n        let res =  axios.post('/user', {\n            barCode: 'BarCode',\n            quantity: 'Quantity',\n            name: 'Name',\n            expirationDate: 'ExpirationDate',\n          })\n          .then(function (response) {\n            console.log(response);\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n        \n        setApiResponse([]);\n\n        fetch(\n            'https://api.openweathermap.org/data/2.5/weather?lang=pt&units=metric&q='\n            +\n            cidade\n            + \n            '&appid=8a0c8437588d7b3c9d8188ce516e9abc')\n            .then(\n                (response) => response.json()\n            )\n                .then(\n                    (response) => {\n                        if (response.cod && response.cod == 200) {\n                            setNotFound(false);\n                        } else {\n                            setNotFound(true);\n                        }setApiResponse(\n                            [response]\n                        )\n                        Keyboard.dismiss()\n                    }\n                )\n        ;\n    }\n\n    return (\n        <View style={estilos.tela}>\n            <ImageBackground source={require('./Imagens/fundo2.jpg')} style={estilos.fundo}>\n                <View style={estilos.busca}>\n                    <TextInput placeholder=\"Código de Barras\" style={estilos.input} value={cidade} onChangeText={searchCity}/>\n                    <TextInput placeholder=\"Quatidade\" style={estilos.input} value={cidade} onChangeText={searchCity}/>\n                    <TextInput placeholder=\"Digite nos da cidade\" style={estilos.input} value={cidade} onChangeText={searchCity}/>\n                    <Button title=\"Cadastrar\" onPress={buscarCidades} />\n                </View>\n                {\n                    notFound ? (\n                        \n                            <Text style={estilos.error}>\n                            <Image style={estilos.icones} source={require('./Icones/atencao.png')} />\n                            &nbsp;&nbsp; NOME INCORRETO\n                            </Text>  \n                        \n                    ) : (\n                        <FlatList data={apiResponse} renderItem={ forecast => (\n                                <View style={estilos.cartao}>\n                                    <View style={estilos.item}>\n                                        <View style={estilos.itens}>\n                                                <Text style={estilos.nomeCidade}>\n                                                    {forecast.item.name}\n                                                </Text>\n                                                    <Text style={estilos.resultado}>\n                                                        <Image style={estilos.icones} source={require('./Icones/temp.png')}/>&nbsp;&nbsp;&nbsp;&nbsp;\n                                                        Temperatura: \n                                                        {forecast.item.main.feels_like + \" \\u00B0\" + \"C\"}\n                                                    </Text>\n                                                    <Text style={estilos.resultado}>\n                                                        <Image style={estilos.icones} source={require('./Icones/up.png')}/>&nbsp;&nbsp;&nbsp;&nbsp;\n                                                        Nascer do sol: \n                                                        {new Date(forecast.item.sys.sunrise * 1000).toLocaleTimeString()}\n                                                    </Text>\n                                                    <Text style={estilos.resultado}>\n                                                        <Image style={estilos.icones} source={require('./Icones/down.png')}/>&nbsp;&nbsp;&nbsp;&nbsp;\n                                                        Pôr do sol: \n                                                        {new Date(forecast.item.sys.sunset * 1000).toLocaleTimeString()}\n                                                    </Text>\n                                            </View>\n                                        </View>\n                                </View>\n                            )}\n                        />\n                    )\n                }\n            </ImageBackground>\n        </View>\n    );\n}\n\nconst estilos = StyleSheet.create({\n    tela: {\n        flexDirection: 'column',\n        flex: 2,\n        textAlign: \"center\",\n    },\n    busca: {\n        textAlign: \"center\",\n        marginBottom: 10\n    },\n    fundo: {\n        flex: 1,\n        resizeMode: \"cover\",\n        justifyContent: \"center\"\n    },\n    icones: {\n        width: 50,\n        height: 50\n    },\n    nomeCidade: {\n        color: 'black',\n        fontWeight:'bold',\n        fontSize: 50,\n        padding: 10,\n        flexDirection: 'column',\n        textTransform: 'uppercase'\n    },\n    itens: {\n        flexDirection: 'column',\n        fontWeight:'bold',\n        alignItems: 'left'\n    },\n    resultado: {\n        marginTop: 10,\n        marginHorizontal: 2,\n        flexDirection: 'column',\n        fontWeight:'bold',\n        alignItems: 'left',\n        textAlign:'left'\n    },\n    error: {\n        color: 'red',\n        textAlign: 'center',\n        marginBottom: 10,\n        fontSize: 20,\n        fontWeight:'bold'\n    },\n    cartao: {\n        marginBottom: 5,\n        alignItems: 'center',\n        backgroundColor: 'white',\n        padding: 30,\n        fontWeight:'bold'\n    },\n    item: {\n        alignItems: 'center',\n        flexDirection: 'column',\n        fontWeight:'bold'\n    },\n    input: {\n        color: 'black',\n        fontWeight:'bold',\n        fontSize: 20,\n        padding: 10,\n        borderBottomColor: 'black',\n        marginbottom: 10,\n        textAlign: \"center\",\n        marginBottom: 10,\n        textTransform: 'uppercase'\n    },\n    botao:{\n        color: '#00BFFF',\n        borderRadius: 40,\n        textAlign: \"center\",\n        width:40,\n        height:30,\n        borderRadius: 40\n    }\n\n}); "]},"metadata":{},"sourceType":"module"}