{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\USTJ\\\\lala\\\\Previsao_OpenWeather\\\\App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ActionSheetIOS from \"react-native-web/dist/exports/ActionSheetIOS\";\nimport Axios from 'axios';\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      barCode = _useState2[0],\n      setBarCode = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      quantity = _useState4[0],\n      setQuantity = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      expirationDate = _useState8[0],\n      setExpirationDate = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      apiResponse = _useState10[0],\n      setApiResponse = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      notFound = _useState12[0],\n      setNotFound = _useState12[1];\n\n  var searchBarCode = function searchBarCode(barcode) {\n    setBarCode(barcode);\n  };\n\n  var searchQuantity = function searchQuantity(quantidade) {\n    setQuantity(quantidade);\n  };\n\n  var searchName = function searchName(name) {\n    setName(name);\n  };\n\n  var searchExpirationDate = function searchExpirationDate(name) {\n    setExpirationDate(name);\n  };\n\n  var buscarCidades = function buscarCidades() {\n    setApiResponse([]);\n    var header = new Headers();\n    Axios({\n      method: 'post',\n      mode: 'no-cors',\n      url: 'http://localhost:54217/api/Item/InsertItem',\n      data: {\n        barCode: '1546456464',\n        quantity: 2,\n        name: 'Teste',\n        expirationDate: '2020-06-07T20:49:48.281Z'\n      },\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Accept-Language': 'pt-BR'\n      },\n      proxy: {\n        host: 'localhost',\n        port: 54217\n      }\n    }).then(function (result) {\n      console.log('Logging result ' + result);\n    }).catch(function (error) {\n      console.log('What happened? ' + error.response);\n    });\n  };\n\n  return React.createElement(View, {\n    style: estilos.tela,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"./Imagens/fundo2.jpg\"),\n    style: estilos.fundo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: estilos.busca,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"C\\xF3digo de Barras\",\n    style: estilos.input,\n    value: barCode,\n    onChangeText: searchBarCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Quatidade\",\n    style: estilos.input,\n    value: quantity,\n    onChangeText: searchQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Nome do produto\",\n    style: estilos.input,\n    value: name,\n    onChangeText: searchName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Data de Validade\",\n    style: estilos.input,\n    value: expirationDate,\n    onChangeText: searchExpirationDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }), React.createElement(Button, {\n    title: \"Cadastrar\",\n    onPress: buscarCidades,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  })), notFound ? React.createElement(Text, {\n    style: estilos.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, React.createElement(Image, {\n    style: estilos.icones,\n    source: require(\"./Icones/atencao.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }), \"\\xA0\\xA0 NOME INCORRETO\") : React.createElement(FlatList, {\n    data: apiResponse,\n    renderItem: function renderItem(forecast) {\n      return React.createElement(View, {\n        style: estilos.cartao,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: estilos.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 37\n        }\n      }, React.createElement(View, {\n        style: estilos.itens,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 41\n        }\n      }, React.createElement(Text, {\n        style: estilos.nomeCidade,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 49\n        }\n      }, forecast.item.name), React.createElement(Text, {\n        style: estilos.resultado,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 53\n        }\n      }, React.createElement(Image, {\n        style: estilos.icones,\n        source: require(\"./Icones/temp.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 57\n        }\n      }), \"\\xA0\\xA0\\xA0\\xA0 Temperatura:\", forecast.item.main.feels_like + \" \\xB0\" + \"C\"), React.createElement(Text, {\n        style: estilos.resultado,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 53\n        }\n      }, React.createElement(Image, {\n        style: estilos.icones,\n        source: require(\"./Icones/up.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 57\n        }\n      }), \"\\xA0\\xA0\\xA0\\xA0 Nascer do sol:\", new Date(forecast.item.sys.sunrise * 1000).toLocaleTimeString()), React.createElement(Text, {\n        style: estilos.resultado,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 53\n        }\n      }, React.createElement(Image, {\n        style: estilos.icones,\n        source: require(\"./Icones/down.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 57\n        }\n      }), \"\\xA0\\xA0\\xA0\\xA0 P\\xF4r do sol:\", new Date(forecast.item.sys.sunset * 1000).toLocaleTimeString()))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  })));\n}\nvar estilos = StyleSheet.create({\n  tela: {\n    flexDirection: 'column',\n    flex: 2,\n    textAlign: \"center\"\n  },\n  busca: {\n    textAlign: \"center\",\n    marginBottom: 10\n  },\n  fundo: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  icones: {\n    width: 50,\n    height: 50\n  },\n  nomeCidade: {\n    color: 'black',\n    fontWeight: 'bold',\n    fontSize: 50,\n    padding: 10,\n    flexDirection: 'column',\n    textTransform: 'uppercase'\n  },\n  itens: {\n    flexDirection: 'column',\n    fontWeight: 'bold',\n    alignItems: 'left'\n  },\n  resultado: {\n    marginTop: 10,\n    marginHorizontal: 2,\n    flexDirection: 'column',\n    fontWeight: 'bold',\n    alignItems: 'left',\n    textAlign: 'left'\n  },\n  error: {\n    color: 'red',\n    textAlign: 'center',\n    marginBottom: 10,\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  cartao: {\n    marginBottom: 5,\n    alignItems: 'center',\n    backgroundColor: 'white',\n    padding: 30,\n    fontWeight: 'bold'\n  },\n  item: {\n    alignItems: 'center',\n    flexDirection: 'column',\n    fontWeight: 'bold'\n  },\n  input: {\n    color: 'black',\n    fontWeight: 'bold',\n    fontSize: 20,\n    padding: 10,\n    borderBottomColor: 'black',\n    marginbottom: 10,\n    textAlign: \"center\",\n    marginBottom: 10,\n    textTransform: 'uppercase'\n  },\n  botao: {\n    color: '#00BFFF',\n    borderRadius: 40,\n    textAlign: \"center\",\n    width: 40,\n    height: 30,\n    borderRadius: 40\n  }\n});","map":{"version":3,"sources":["C:/USTJ/lala/Previsao_OpenWeather/App.js"],"names":["React","useState","Axios","App","barCode","setBarCode","quantity","setQuantity","name","setName","expirationDate","setExpirationDate","apiResponse","setApiResponse","notFound","setNotFound","searchBarCode","barcode","searchQuantity","quantidade","searchName","searchExpirationDate","buscarCidades","header","Headers","method","mode","url","data","headers","proxy","host","port","then","result","console","log","catch","error","response","estilos","tela","require","fundo","busca","input","icones","forecast","cartao","item","itens","nomeCidade","resultado","main","feels_like","Date","sys","sunrise","toLocaleTimeString","sunset","StyleSheet","create","flexDirection","flex","textAlign","marginBottom","resizeMode","justifyContent","width","height","color","fontWeight","fontSize","padding","textTransform","alignItems","marginTop","marginHorizontal","backgroundColor","borderBottomColor","marginbottom","botao","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {StyleSheet,TextInput,View,Button,FlatList,Keyboard,Image,Text,ImageBackground, ActionSheetIOS} from 'react-native';\nimport Axios from 'axios';\n\nexport default function App() {\n    //const [cidade, setCidade] = useState('');\n    const [barCode, setBarCode] = useState('');\n    const [quantity, setQuantity] = useState('');\n    const [name, setName] = useState('');\n    const [expirationDate, setExpirationDate] = useState('');\n\n    const [apiResponse, setApiResponse] = useState([]);\n\n    const [notFound, setNotFound] = useState(false)\n\n    const searchBarCode = (barcode) => {\n        setBarCode(barcode);\n    }\n\n    const searchQuantity = (quantidade) => {\n        setQuantity(quantidade);\n    }\n\n    const searchName = (name) => {\n        setName(name);\n    }\n\n    const searchExpirationDate = (name) => {\n        setExpirationDate(name);\n    }\n\n    const buscarCidades = () => {\n        setApiResponse([]);\n        var header = new Headers();\n\n        Axios({\n            method: 'post',\n            mode: 'no-cors',\n            url: 'http://localhost:54217/api/Item/InsertItem',\n            data: {\n                barCode: '1546456464',\n                quantity: 2,\n                name: 'Teste',\n                expirationDate: '2020-06-07T20:49:48.281Z'\n            },\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Accept-Language': 'pt-BR'\n            },\n            proxy: {\n                host: 'localhost',\n                port: 54217\n              } \n          }).then(function(result) {\n            console.log('Logging result ' + result);\n          })\n          .catch(function(error) {\n            console.log('What happened? ' + error.response);\n          });\n\n        // Axios.post(\n        //     'http://172.25.144.1:54217/api/Item/InsertItem',\n        //     data: {\n        //         barCode: '1546456464',\n        //         quantity: 2,\n        //         name: 'Teste',\n        //         expirationDate: '2020-06-07T20:49:48.281Z'\n        //     },\n        //     {\n        //         headers: {\n        //                     'Accept': 'application/json',\n        //                     'Content-Type': 'application/json',\n        //                     'Accept-Language': 'pt-BR'\n        //                 } \n        //     }\n        // ).then(function(result) {\n        //     console.log('Logging result ' + result);\n        //   })\n        //   .catch(function(error) {\n        //     console.log('What happened? ' + error.response.data);\n        //   });\n\n/*      \n        fetch(\n            'https://api.openweathermap.org/data/2.5/weather?lang=pt&units=metric&q='\n            +\n            cidade\n            + \n            '&appid=8a0c8437588d7b3c9d8188ce516e9abc')*/\n        //     fetch('http://172.25.144.1:54217/api/Item/InsertItem',\n        //     {\n        //         mode: 'no-cors',\n        //         method: 'GET',\n        //          headers: {\n        //             'Accept': 'application/json',\n        //             'Content-Type': 'application/json'\n        //         },\n        //         body:JSON.stringify({\n        //         barCode: '1546456464',\n        //         quantity: 2,\n        //         name: 'Teste',\n        //         expirationDate: '2020-06-07T20:49:48.281Z'\n        //     })\n        //     })\n        //     .then(\n        //         console.log(response)\n        //         //(response) => response.json()\n        //     )\n        //         .then(\n        //             (response) => {\n        //                 if (response.cod && response.cod == 200) {\n        //                     setNotFound(false);\n        //                 } else {\n        //                     setNotFound(true);\n        //                 }setApiResponse(\n        //                     //[response]\n        //                 )\n        //                 Keyboard.dismiss()\n        //             }\n        //         )\n        // ;\n    }\n\n    return (\n\n        <View style={estilos.tela}>\n            <ImageBackground source={require('./Imagens/fundo2.jpg')} style={estilos.fundo}>\n                <View style={estilos.busca}>\n                    <TextInput placeholder=\"Código de Barras\" style={estilos.input} value={barCode} onChangeText={searchBarCode}/>\n                    <TextInput placeholder=\"Quatidade\" style={estilos.input} value={quantity} onChangeText={searchQuantity}/>\n                    <TextInput placeholder=\"Nome do produto\" style={estilos.input} value={name} onChangeText={searchName}/>\n                    <TextInput placeholder=\"Data de Validade\" style={estilos.input} value={expirationDate} onChangeText={searchExpirationDate}/>\n                    <Button title=\"Cadastrar\" onPress={buscarCidades} />\n                </View>\n                {\n                    notFound ? (\n                        \n                            <Text style={estilos.error}>\n                            <Image style={estilos.icones} source={require('./Icones/atencao.png')} />\n                            &nbsp;&nbsp; NOME INCORRETO\n                            </Text>  \n                        \n                    ) : (\n                        <FlatList data={apiResponse} renderItem={ forecast => (\n                                <View style={estilos.cartao}>\n                                    <View style={estilos.item}>\n                                        <View style={estilos.itens}>\n                                                <Text style={estilos.nomeCidade}>\n                                                    {forecast.item.name}\n                                                </Text>\n                                                    <Text style={estilos.resultado}>\n                                                        <Image style={estilos.icones} source={require('./Icones/temp.png')}/>&nbsp;&nbsp;&nbsp;&nbsp;\n                                                        Temperatura: \n                                                        {forecast.item.main.feels_like + \" \\u00B0\" + \"C\"}\n                                                    </Text>\n                                                    <Text style={estilos.resultado}>\n                                                        <Image style={estilos.icones} source={require('./Icones/up.png')}/>&nbsp;&nbsp;&nbsp;&nbsp;\n                                                        Nascer do sol: \n                                                        {new Date(forecast.item.sys.sunrise * 1000).toLocaleTimeString()}\n                                                    </Text>\n                                                    <Text style={estilos.resultado}>\n                                                        <Image style={estilos.icones} source={require('./Icones/down.png')}/>&nbsp;&nbsp;&nbsp;&nbsp;\n                                                        Pôr do sol: \n                                                        {new Date(forecast.item.sys.sunset * 1000).toLocaleTimeString()}\n                                                    </Text>\n                                            </View>\n                                        </View>\n                                </View>\n                            )}\n                        />\n                    )\n                }\n            </ImageBackground>\n        </View>\n    );\n}\n\nconst estilos = StyleSheet.create({\n    tela: {\n        flexDirection: 'column',\n        flex: 2,\n        textAlign: \"center\",\n    },\n    busca: {\n        textAlign: \"center\",\n        marginBottom: 10\n    },\n    fundo: {\n        flex: 1,\n        resizeMode: \"cover\",\n        justifyContent: \"center\"\n    },\n    icones: {\n        width: 50,\n        height: 50\n    },\n    nomeCidade: {\n        color: 'black',\n        fontWeight:'bold',\n        fontSize: 50,\n        padding: 10,\n        flexDirection: 'column',\n        textTransform: 'uppercase'\n    },\n    itens: {\n        flexDirection: 'column',\n        fontWeight:'bold',\n        alignItems: 'left'\n    },\n    resultado: {\n        marginTop: 10,\n        marginHorizontal: 2,\n        flexDirection: 'column',\n        fontWeight:'bold',\n        alignItems: 'left',\n        textAlign:'left'\n    },\n    error: {\n        color: 'red',\n        textAlign: 'center',\n        marginBottom: 10,\n        fontSize: 20,\n        fontWeight:'bold'\n    },\n    cartao: {\n        marginBottom: 5,\n        alignItems: 'center',\n        backgroundColor: 'white',\n        padding: 30,\n        fontWeight:'bold'\n    },\n    item: {\n        alignItems: 'center',\n        flexDirection: 'column',\n        fontWeight:'bold'\n    },\n    input: {\n        color: 'black',\n        fontWeight:'bold',\n        fontSize: 20,\n        padding: 10,\n        borderBottomColor: 'black',\n        marginbottom: 10,\n        textAlign: \"center\",\n        marginBottom: 10,\n        textTransform: 'uppercase'\n    },\n    botao:{\n        color: '#00BFFF',\n        borderRadius: 40,\n        textAlign: \"center\",\n        width:40,\n        height:30,\n        borderRadius: 40\n    }\n\n}); "]},"metadata":{},"sourceType":"module"}